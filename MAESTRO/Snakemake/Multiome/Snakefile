"""
A single cell multiome (RNA + ATAC) analysis pipeline.
"""

configfile: "config.yaml"

from MAESTRO.scATAC_utility import is_gzip, get_fastqlist, ENV_PATH, SCRIPT_PATH, RSCRIPT_PATH
import yaml
import sys
import os
import json

FILES = json.load(open(config['SAMPLES_JSON']))

def all_input_frag(wildcards):
    checkpoint_output = checkpoints.scatac_fragcluster.get().output[0]
    return expand("Result/ATAC/Analysis/Cluster/{cluster}_treat_pileup.bdg",
        cluster=glob_wildcards(os.path.join(checkpoint_output, "{cluster}.bed")).cluster)

if config["clusterpeaks"]:
    rule all:
        input:
            summaryreport = "Result/" + config["outprefix"] + "_multiome_report.html",
            peakcluster = all_input_frag

else:
    rule all:
        input:
            summaryreport = "Result/" + config["outprefix"] + "_multiome_report.html"

if config["mapping"] == "minimap2":
    include: "rules/sc_atac_minimap_preprocess.smk"
    include: "rules/sc_atac_minimap.smk"
    include: "rules/sc_atac_fragment_generate.smk"
    include: "rules/sc_atac_dedup.smk"
elif config["mapping"] == "chromap":
    include: "rules/sc_atac_chromap_preprocess.smk"
    include: "rules/sc_atac_chromap.smk"


# scRNA part
include: "rules/sc_rna_map.smk"
include: "rules/sc_rna_qc.smk"
if config["rseqc"]:
    include: "rules/sc_rna_rseqc.smk"

# scATAC part
include: "rules/sc_atac_peak_call.smk"
include: "rules/sc_atac_peak_count.smk"
include: "rules/sc_atac_qc.smk"

# integration
# include: "rules/multiome_barcode_map.smk"
include: "rules/multiome_qc.smk"
include: "rules/sc_rna_analysis.smk"
include: "rules/sc_atac_analysis.smk"
include: "rules/multiome_analysis.smk"
